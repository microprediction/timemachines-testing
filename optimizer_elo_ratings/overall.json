{"name": ["shgo_slqsp_sobol_cube", "shgo_powell_sobol_cube", "shgo_nelder_sobol_cube", "shgo_dogleg_sobol_cube", "scipy_slqsp_cube", "scipy_powell_cube", "scipy_nelder_cube", "scipy_dogleg_cube", "pysot_ei_cube", "pysot_lcb_cube", "pysot_random_cube", "pysot_srbf_cube", "pysot_dycors_cube", "ax_default_cube", "optuna_cmaes_cube", "optuna_tpe_cube", "optuna_random_cube", "platypus_genetic_cube", "platypus_evolutionary_cube", "platypus_nsgaii_cube", "platypus_nsgaii_cube", "platypus_cmaes_cube", "platypus_gde3_cube", "platypus_ibea_cube", "platypus_moead_cube", "platypus_omopso_cube", "platypus_smpso_cube", "platypus_spea2_cube", "platypus_epsmoea_cube", "nevergrad_ngopt_cube", "nevergrad_ngopt4_cube", "nevergrad_ngopt8_cube", "nevergrad_de_cube", "nevergrad_portfolio_cube", "nevergrad_oneplus_cube", "nevergrad_cma_cube", "nevergrad_hammersley_cube", "swarmlib_pso_cube", "optuna_random_cube_clone", "hyperopt_atpe_cube", "hyperopt_rand_cube", "hyperopt_tpe_cube", "optuna_random_cube_clone_1", "optuna_random_cube_clone_2", "pymoo_nsga2_cube", "pymoo_nelder_cube", "pymoo_nsga3_cube", "pymoo_unsga3_cube", "pymoo_pattern_cube", "pymoo_brkga_cube", "pymoo_nsga2_cube", "skopt_gp_default_cube"], "count": [0, 1, 0, 3, 6, 3, 5, 8, 2, 2, 2, 2, 6, 3, 0, 2, 3, 6, 5, 10, 0, 7, 3, 1, 5, 3, 3, 5, 3, 3, 6, 2, 3, 2, 6, 7, 4, 2, 2, 3, 3, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0], "rating": [1600, 1600, 1658.0021674203415, 1600, 1625.3655668913832, 1689.672906324774, 1661.9716431891006, 1684.1323847008382, 1711.9207184012557, 1487.8488303054646, 1542.021391305997, 1519.7955348793912, 1682.1790808940057, 1601.0393166059478, 1630.0, 1541.764255164451, 1600, 1462.9902885265103, 1533.6576829911999, 1583.9605023038146, 1600, 1569.8464351963848, 1685.5328930059516, 1541.1315367797383, 1516.6271477847633, 1627.969995874123, 1571.0357514659427, 1608.586752417285, 1657.7362981507463, 1685.5383271127102, 1595.1432157705824, 1663.6981373680346, 1570.0, 1568.1922123993797, 1567.1700659804262, 1600, 1601.0427562406032, 1570.0, 1600, 1600.2532891249004, 1655.990881822881, 1625.0418734017146, 1628.999467119589, 1600, 1544.1399494515942, 1544.0359441900455, 1631.677402763044, 1598.9999809351227, 1568.9676460776232, 1600, 1600, 1600], "traceback": ["passing", "Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/eloratings.py\", line 76, in optimizer_game\n    black_best_val, black_best_x, black_feval_count = black(objective, n_trials=n_black_trials,\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/shgocube.py\", line 26, in shgo_powell_sobol_cube\n    return shgo_cube(objective=objective, n_trials=n_trials, n_dim=n_dim, with_count=with_count,\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/shgocube.py\", line 86, in shgo_cube\n    result = shgo(_objective, bounds, n=n, iters=n_iters, options={'maxfev': n_trials_reduced,\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/scipy/optimize/_shgo.py\", line 421, in shgo\n    shc.construct_complex()\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/scipy/optimize/_shgo.py\", line 733, in construct_complex\n    self.find_minima()\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/scipy/optimize/_shgo.py\", line 742, in find_minima\n    self.minimizers()\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/scipy/optimize/_shgo.py\", line 1261, in delaunay_complex_minimisers\n    self.delaunay_triangulation(grow=True, n_prc=self.n_prc)\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/scipy/optimize/_shgo.py\", line 1538, in delaunay_triangulation\n    self.Tri = spatial.Delaunay(self.C, incremental=True)\n  File \"qhull.pyx\", line 1840, in scipy.spatial.qhull.Delaunay.__init__\n  File \"qhull.pyx\", line 356, in scipy.spatial.qhull._Qhull.__init__\nscipy.spatial.qhull.QhullError: QH6239 Qhull precision error: initial Delaunay input sites are cocircular or cospherical.  Use option 'Qz' for the Delaunay triangulation or Voronoi diagram of cocircular/cospherical points; it adds a point \"at infinity\".  Alternatively use option 'QJ' to joggle the input.  Use option 'Qs' to search all points for the initial simplex.\n\ninput sites with last coordinate projected to a paraboloid\n- p1(v10):   0.5   0.5   0.5   0.5   0.5   0.5   0.5   0.5     2\n- p3(v9):  0.25  0.75  0.25  0.75  0.25  0.75  0.25  0.75   2.5\n- p2(v8):  0.75  0.25  0.75  0.25  0.75  0.25  0.75  0.25   2.5\n- p8(v7):  0.19  0.31  0.31  0.69  0.56  0.19 0.062  0.94   1.9\n- p4(v6):  0.38  0.38  0.62  0.12  0.88  0.88  0.12  0.62   2.6\n- p9(v5):  0.69  0.81  0.81  0.19 0.062  0.69  0.56  0.44   2.8\n- p6(v4):  0.62  0.12  0.38  0.38  0.12  0.62  0.88  0.88   2.6\n- p7(v3):  0.12  0.62  0.88  0.88  0.62  0.12  0.38  0.38   2.6\n- p5(v2):  0.88  0.88  0.12  0.62  0.38  0.38  0.62  0.12   2.6\n- p0(v1):     0     0     0     0     0     0     0     0     0\n\nWhile executing:  | qhull d Qc Qx Q11 Qt\nOptions selected for Qhull 2019.1.r 2019/06/21:\n  run-id 158988630  delaunay  Qcoplanar-keep  Qxact-merge\n  Q11-trinormals Qtriangulate  Qtriangulate  _zero-centrum  Qinterior-keep\n  Q3-no-merge-vertices-dim-high  Pgood  _max-width 2.8  Error-roundoff 1.8e-14\n  _one-merge 3.4e-13  Visible-distance 1.1e-13  U-max-coplanar 1.1e-13\n  Width-outside 2.1e-13  _wide-facet 6.4e-13  _maxoutside 3.5e-13\n\n", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "not yet run", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/eloratings.py\", line 41, in optimizer_game\n    white_best_val, white_best_x, white_feval_count = white(objective, n_trials=n_white_trials, n_dim=n_dim,\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/swarmlibcube.py\", line 120, in swarmlib_pso_cube\n    return swarmlib_cube(objective=objective, n_trials=n_trials, n_dim=n_dim, with_count=with_count, algo='pso')\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/swarmlibcube.py\", line 111, in swarmlib_cube\n    problem = InvisiblePSOProblem(function=cube_objective, particles=particles, iteration_number=iteration_number,\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/swarmlibcube.py\", line 56, in __init__\n    self.__particles = [\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/swarmlibcube.py\", line 57, in <listcomp>\n    PSOParticle(**kwargs, bit_generator=self._random)\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/swarmlib/pso/particle.py\", line 16, in __init__\n    super().__init__(**kwargs)\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/swarmlib/util/coordinate.py\", line 21, in __init__\n    self._initialize()\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/swarmlib/util/coordinate.py\", line 27, in _initialize\n    self._position = self._random.uniform(self.__lower_boundary, self.__upper_boundary, 2)\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/swarmlib/util/coordinate.py\", line 56, in _position\n    self.__value = self._function(self.__position)\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/optimizers/swarmlibcube.py\", line 103, in cube_objective\n    un = to_space(u1,dim=n_dim)\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/timemachines/skaters/conventions.py\", line 168, in to_space\n    us = reversed(ZCurveConventions().to_cube(zpercentile=p, dim=dim))  # 0 < us[i] < 1\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/microconventions/zcurve_conventions.py\", line 76, in to_cube\n    zmorton = int(self.morton_large(dim) * zpercentile + 0.5)\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/microconventions/zcurve_conventions.py\", line 43, in morton_large\n    return pymorton.interleave( *[ SCALE-1 for _ in range(dim) ] )\n  File \"/opt/hostedtoolcache/Python/3.8.7/x64/lib/python3.8/site-packages/pymorton/__init__.py\", line 74, in interleave\n    raise ValueError(\nValueError: You must supply two or three integers to interleave!\n", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "not yet run", "passing"], "active": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]}